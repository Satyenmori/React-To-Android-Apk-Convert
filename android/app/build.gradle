apply plugin: 'com.android.application'

// Define versions here
ext {
    androidxAppCompatVersion = '1.3.0'
    androidxCoordinatorLayoutVersion = '1.1.0'
    coreSplashScreenVersion = '1.0.0'
    constraintLayoutVersion = '2.0.4' // Define constraintLayoutVersion here
    junitVersion = '4.13.2'
    androidxJunitVersion = '1.1.3'
    androidxEspressoCoreVersion = '3.4.0'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.example.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Configure AAPT options to omit specific files and directories from packaged assets
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace "com.example.app"
}

repositories {
    google() // Add Google Maven repository for Firebase dependencies if needed
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX dependencies
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    
    // Capacitor dependencies
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    // Test dependencies
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}

// Apply Capacitor-specific build script
apply from: 'capacitor.build.gradle'

// Apply Google Services plugin for Firebase if google-services.json exists
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists()) {
        apply plugin: 'com.google.gms.google-services'
    } else {
        logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
    }
} catch(Exception e) {
    logger.error("Error applying Google Services plugin: ${e.message}")
}
